;
;
;   Program written by Robert Livingston, 2016-05-16
;
;   QT:NEWANG Calculates the new angle after a linear movement
;
;
(defun QT:NEWANG (ANG C PLIST L / ANG2 ANG3 FT SIGN TOL)
 (defun FT (C PLIST / D2 P1 P2 P3 R)
  (setq P1 (nth C PLIST))
  (setq P2 (nth (1- C) PLIST))
;  (setq D2 (/ (distance P1 P2) 2.0))
;  (cond ((< (1+ C) (length PLIST))
;         (setq P3 (nth (1+ C) PLIST))
;        )
;        ((> C 1)
;         (setq P3 (nth (- C 2) PLIST))
;        )
;        (T
;         (setq P3 nil)
;        )
;  )
;  (if (setq R (last (QT:CIRCLE3P P1 P2 P3)))
;   (* 2.0 R (atan (/ D2 (sqrt (- (* R R) (* D2 D2))))))
   (distance P1 P2)
;  )
 )
 (setq TOL 0.0000001)
 (setq P1 (nth C PLIST))
 (setq P2 (nth (1- C) PLIST))
 (setq ANG2 (- ANG (angle P1 P2)))
 (while (< ANG2 0.0)
  (setq ANG2 (+ ANG2 (* 2.0 pi)))
 )
 (while (>= ANG2 (* 2.0 pi))
  (setq ANG2 (- ANG2 (* 2.0 pi)))
 )
 (setq SIGN 1.0)
 (if (> ANG2 pi)
  (progn
   (setq SIGN -1.0)
   (setq ANG2 (- (* 2.0 pi) ANG2))
  )
 )
 (if (< ANG2 TOL)
  (setq ANG2 0.0)
  (setq ANG2 (* 2.0
                (atan (exp (- (log (TAN (/ ANG2 2.0)))
                              (/ (FT C PLIST) L)
                           )
                      )
                )
             )
  )
 )
 (setq ANG2 (+ (angle P1 P2) (* SIGN ANG2)))
 (while (< ANG2 0.0)
  (setq ANG2 (+ ANG2 (* 2.0 pi)))
 )
 (while (>= ANG2 (* 2.0 pi))
  (setq ANG2 (- ANG2 (* 2.0 pi)))
 )
 (eval ANG2)
)
